name: Build macOS App

on:
  push:
    branches:
      - v3-alpha
    tags:
      - 'v*'

jobs:
  build:
    permissions: write-all
    runs-on: macos-latest

    strategy:
      matrix:
        arch: [amd64, arm64]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set version from latest tag
        run: echo "VERSION=$(git describe --tags --abbrev=0)" >> "$GITHUB_ENV"

      - name: Build macOS package
        run: |
          echo "Building Pandora-Box version $VERSION"

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Build Frontend
        run: |
          cd frontend
          npm install
          npm run build

      - name: Set Up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./backend/go.mod
      - run: go version

      - name: Build Go Backend for ${{ matrix.arch }}
        run: |
          cd backend
          go mod tidy
          CGO_ENABLED=1 GOARCH=${{ matrix.arch }} GOOS=darwin go build -tags=with_gvisor -trimpath -ldflags "-s -w" -o Pandora-Box-${{ matrix.arch }} main.go

      - name: Create macOS App Bundle
        run: |
          mkdir -p Pandora-Box-${{ matrix.arch }}.app/Contents/MacOS
          mkdir -p Pandora-Box-${{ matrix.arch }}.app/Contents/Resources
          mv backend/Pandora-Box-${{ matrix.arch }} Pandora-Box-${{ matrix.arch }}.app/Contents/MacOS/
          echo '<?xml version="1.0" encoding="UTF-8"?>' > Pandora-Box-${{ matrix.arch }}.app/Contents/Info.plist
          echo '<plist version="1.0">' >> Pandora-Box-${{ matrix.arch }}.app/Contents/Info.plist
          echo '<dict>' >> Pandora-Box-${{ matrix.arch }}.app/Contents/Info.plist
          echo '  <key>CFBundleExecutable</key>' >> Pandora-Box-${{ matrix.arch }}.app/Contents/Info.plist
          echo '  <string>Pandora-Box-${{ matrix.arch }}</string>' >> Pandora-Box-${{ matrix.arch }}.app/Contents/Info.plist
          echo '  <key>CFBundleIconFile</key>' >> Pandora-Box-${{ matrix.arch }}.app/Contents/Info.plist
          echo '  <string>appicon.icns</string>' >> Pandora-Box-${{ matrix.arch }}.app/Contents/Info.plist
          echo '</dict>' >> Pandora-Box-${{ matrix.arch }}.app/Contents/Info.plist
          echo '</plist>' >> Pandora-Box-${{ matrix.arch }}.app/Contents/Info.plist

      - name: Install ImageMagick
        run: brew install imagemagick

      - name: Convert PNG to ICNS
        run: |
          mkdir appicon.iconset
      
          # 使用 ImageMagick 生成所有尺寸
          magick script/appicon.png -resize 16x16 appicon.iconset/icon_16x16.png
          magick script/appicon.png -resize 32x32 appicon.iconset/icon_16x16@2x.png
          magick script/appicon.png -resize 32x32 appicon.iconset/icon_32x32.png
          magick script/appicon.png -resize 64x64 appicon.iconset/icon_32x32@2x.png
          magick script/appicon.png -resize 128x128 appicon.iconset/icon_128x128.png
          magick script/appicon.png -resize 256x256 appicon.iconset/icon_128x128@2x.png
          magick script/appicon.png -resize 256x256 appicon.iconset/icon_256x256.png
          magick script/appicon.png -resize 512x512 appicon.iconset/icon_256x256@2x.png
          magick script/appicon.png -resize 512x512 appicon.iconset/icon_512x512.png
          magick script/appicon.png -resize 1024x1024 appicon.iconset/icon_512x512@2x.png
      
          # 确保文件格式正确
          file appicon.iconset/icon_512x512.png
          file appicon.iconset/icon_512x512@2x.png
      
          # 生成 .icns 图标
          iconutil -c icns -o appicon.icns appicon.iconset -v
      
          # 清理 iconset 目录
          rm -r appicon.iconset
      
          # 移动到 macOS app 资源目录
          mv appicon.icns Pandora-Box-${{ matrix.arch }}.app/Contents/Resources/

      - name: Archive App Folder
        run: zip -r Pandora-Box-${{ matrix.arch }}.app.zip Pandora-Box-${{ matrix.arch }}.app

      - name: Create DMG
        run: |
          hdiutil create -volname Pandora-Box-${{ matrix.arch }} -srcfolder Pandora-Box-${{ matrix.arch }}.app -format UDZO -o Pandora-Box-${{ matrix.arch }}.dmg

      - name: Upload Artifacts (.app and .dmg)
        uses: actions/upload-artifact@v4
        with:
          name: Pandora-Box-${{ matrix.arch }}
          path: |
            Pandora-Box-${{ matrix.arch }}.dmg
            Pandora-Box-${{ matrix.arch }}.app.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Pandora-Box Release ${{ env.VERSION }}
          draft: false
          prerelease: true
          files: |
            Pandora-Box-${{ matrix.arch }}.dmg
            Pandora-Box-${{ matrix.arch }}.app.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

