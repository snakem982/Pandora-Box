name: Build Go Project with MSVC

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [amd64, arm64, 386]  # 支持不同架构的编译

    steps:
      # 检出代码
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 安装并设置 Visual Studio 构建工具
      - name: Install Visual Studio Build Tools
        uses: actions/setup-msvc@v1
        with:
          vs-version: '2022'  # 使用 Visual Studio 2022，按需选择版本

      # 初始化 MSVC 环境
      - name: Setup MSVC Environment
        shell: pwsh
        run: |
          # 执行 MSVC 环境初始化脚本，确保 cl.exe 可以在环境中找到
          & "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\Common7\Tools\VsDevCmd.bat"
          echo "MSVC environment setup complete"

      # 设置 Go 环境
      - name: Set Up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'  # 设置 Go 版本

      # 安装依赖
      - name: Install Dependencies
        run: |
          cd backend
          go mod tidy

      # 使用 MSVC 编译 Go 项目
      - name: Build Go Backend for ${{ matrix.arch }}
        shell: pwsh
        run: |
          cd backend
          $env:GOARCH = "${{ matrix.arch }}"
          $env:GOOS = "windows"
          $env:CGO_ENABLED = "1"
          $env:CC = "cl"  # 设置使用 MSVC 编译器 cl.exe
          $env:CXX = "cl" # 设置 C++ 编译器为 cl.exe
          go build -tags=with_gvisor -trimpath `
            -ldflags "-s -w -H=windowsgui" `
            -o "Pandora-Box-${{ matrix.arch }}.exe" main.go

      # 将生成的可执行文件进行压缩
      - name: Compress Executable
        shell: pwsh
        run: |
          Compress-Archive -Path backend\Pandora-Box-${{ matrix.arch }}.exe -DestinationPath Pandora-Box-${{ matrix.arch }}.zip

      # 上传构建产物
      - name: Upload Artifacts (Compressed Executable)
        uses: actions/upload-artifact@v4
        with:
          name: Pandora-Box-${{ matrix.arch }}.exe.zip
          path: Pandora-Box-${{ matrix.arch }}.zip

      # 创建 GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.1-alpha
          name: v1.0.1-alpha
          draft: false
          prerelease: true
          files: |
            Pandora-Box-${{ matrix.arch }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
